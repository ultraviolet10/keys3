import { TileInteractionStatus } from "@/types"

/**
 * number of pixels we scroll by for complexity increments
 */
export const GAME_SPEED = 200

/**
 * height of each tile in pixels
 */
export const TILE_HEIGHT = 100

// All available audio notes for preloading
export const notes = [
	// Natural notes across all octaves
	"C1",
	"C2",
	"C3",
	"C4",
	"C5",
	"C6",
	"C7",
	"C8",
	"D1",
	"D2",
	"D3",
	"D4",
	"D5",
	"D6",
	"D7",
	"E1",
	"E2",
	"E3",
	"E4",
	"E5",
	"E6",
	"E7",
	"F1",
	"F2",
	"F3",
	"F4",
	"F5",
	"F6",
	"F7",
	"G1",
	"G2",
	"G3",
	"G4",
	"G5",
	"G6",
	"G7",
	"A0",
	"A1",
	"A2",
	"A3",
	"A4",
	"A5",
	"A6",
	"A7",
	"B0",
	"B1",
	"B2",
	"B3",
	"B4",
	"B5",
	"B6",
	"B7",

	// Sharp/flat notes (using flat notation as in your files)
	"Db1",
	"Db2",
	"Db3",
	"Db4",
	"Db5",
	"Db6",
	"Db7",
	"Db8",
	"Eb1",
	"Eb2",
	"Eb3",
	"Eb4",
	"Eb5",
	"Eb6",
	"Eb7",
	"Gb1",
	"Gb2",
	"Gb3",
	"Gb4",
	"Gb5",
	"Gb6",
	"Gb7",
	"Ab1",
	"Ab2",
	"Ab3",
	"Ab4",
	"Ab5",
	"Ab6",
	"Ab7",
	"Bb0",
	"Bb1",
	"Bb2",
	"Bb3",
	"Bb4",
	"Bb5",
	"Bb6",
	"Bb7",
]

// Extended classical-style melody sequence (32 notes)
// Original composition inspired by romantic period piano works
export const melodySequence = [
	// Opening theme - delicate and expressive
	"E5",
	"Eb5",
	"E5",
	"Eb5",
	"E5",
	"B4",
	"D5",
	"C5",
	"A4",
	"C4",
	"E4",
	"A4",
	"B4",
	"E4",
	"Ab4",
	"B4",

	// Development - building intensity
	"C5",
	"E5",
	"A5",
	"B5",
	"C6",
	"E5",
	"F5",
	"E5",
	"D5",
	"F4",
	"A4",
	"B4",
	"C5",
	"E4",
	"D5",
	"C5",

	// Climax - higher register with fuller harmonies
	"B4",
	"C5",
	"D5",
	"E5",
	"F5",
	"G5",
	"A5",
	"B5",
	"C6",
	"B5",
	"A5",
	"G5",
	"F5",
	"E5",
	"D5",
	"C5",
]

// Fallback sequence for continuous play after melody completes
export const noteSequence = ["C4", "D4", "E4", "F4", "G4", "A4", "B4"]
export const initialTileRows = [
	{ id: 1, y: 0, activeColumn: 0, status: TileInteractionStatus.PENDING },
	{ id: 2, y: 80, activeColumn: 1, status: TileInteractionStatus.PENDING },
	{ id: 3, y: 160, activeColumn: 3, status: TileInteractionStatus.PENDING },
	{ id: 4, y: 240, activeColumn: 2, status: TileInteractionStatus.PENDING },
	{ id: 5, y: 320, activeColumn: 1, status: TileInteractionStatus.PENDING },
	{ id: 6, y: 400, activeColumn: 0, status: TileInteractionStatus.PENDING },
	{ id: 7, y: 480, activeColumn: 0, status: TileInteractionStatus.PENDING },
]
